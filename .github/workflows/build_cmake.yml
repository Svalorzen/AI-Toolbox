name: AI-Toolbox

on:
  push:
    branches:
      - master
      - test
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      # Do not stop all jobs if a single job fails.
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        build-type: ["Release"]
        cxx: ["g++"] #, "clang++"]
        gcc: [10]
        clang: [12]
        python-version: ["3.8"]

    steps:
    - name: Checkout repository.
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies.
      run: |
        sudo apt install libboost-all-dev liblpsolve55-dev lp-solve python3-future

    - name: Install Eigen 3.4
      run: |
        git clone --single-branch --depth=1 --branch 3.4.0 https://gitlab.com/libeigen/eigen.git
        mkdir eigen/build
        cd eigen/build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$HOME/.local/eigen"
        make -j2 install

    - name: Create build folder
      run: |
        mkdir ${{ runner.workspace }}/AI-Toolbox/build

    - name: Run CMake
      working-directory: ${{ runner.workspace }}/AI-Toolbox/build
      run: |
        if [ "${{ matrix.cxx }}" = "g++" ];     then export CXX="/usr/bin/g++-10"     CC="/usr/bin/gcc-10"; fi
        if [ "${{ matrix.cxx }}" = "clang++" ]; then export CXX="/usr/bin/clang++-12" CC="/usr/bin/clang-12"; fi
        cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DEIGEN3_INCLUDE_DIR="$HOME/.local/eigen/include/eigen3" -DMAKE_PYTHON=1 -DAI_PYTHON_VERSION=${{ matrix.python-version }} -DAI_LOGGING_ENABLED=1

    - name: Build
      working-directory: ${{ runner.workspace }}/AI-Toolbox/build
      run: |
        make -j2 VERBOSE=1

    - name: Run tests
      working-directory: ${{ runner.workspace }}/AI-Toolbox/build
      run: |
        ctest -V -j2 --output-on-failure --repeat until-pass:3
